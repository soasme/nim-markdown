nimTitle	markdown	markdown.html	module src/markdown		0
nim	MarkdownError	markdown.html#MarkdownError	object MarkdownError		103
nim	Parser	markdown.html#Parser	type Parser		107
nim	MarkdownConfig	markdown.html#MarkdownConfig	type MarkdownConfig		109
nim	BlockChunk	markdown.html#BlockChunk	ChunkKind.BlockChunk		115
nim	LazyChunk	markdown.html#LazyChunk	ChunkKind.LazyChunk		115
nim	InlineChunk	markdown.html#InlineChunk	ChunkKind.InlineChunk		115
nim	ChunkKind	markdown.html#ChunkKind	enum ChunkKind		115
nim	Chunk	markdown.html#Chunk	type Chunk		120
nim	Token	markdown.html#Token	type Token		125
nim	ParseResult	markdown.html#ParseResult	type ParseResult		130
nim	Document	markdown.html#Document	type Document		134
nim	Block	markdown.html#Block	type Block		136
nim	BlanklineParser	markdown.html#BlanklineParser	type BlanklineParser		138
nim	ParagraphParser	markdown.html#ParagraphParser	type ParagraphParser		140
nim	Paragraph	markdown.html#Paragraph	type Paragraph		141
nim	ReferenceParser	markdown.html#ReferenceParser	type ReferenceParser		145
nim	ThematicBreakParser	markdown.html#ThematicBreakParser	type ThematicBreakParser		151
nim	ThematicBreak	markdown.html#ThematicBreak	type ThematicBreak		152
nim	SetextHeadingParser	markdown.html#SetextHeadingParser	type SetextHeadingParser		154
nim	AtxHeadingParser	markdown.html#AtxHeadingParser	type AtxHeadingParser		155
nim	Heading	markdown.html#Heading	type Heading		156
nim	FencedCodeParser	markdown.html#FencedCodeParser	type FencedCodeParser		159
nim	IndentedCodeParser	markdown.html#IndentedCodeParser	type IndentedCodeParser		160
nim	CodeBlock	markdown.html#CodeBlock	type CodeBlock		161
nim	HtmlBlockParser	markdown.html#HtmlBlockParser	type HtmlBlockParser		164
nim	HtmlBlock	markdown.html#HtmlBlock	type HtmlBlock		165
nim	BlockquoteParser	markdown.html#BlockquoteParser	type BlockquoteParser		167
nim	Blockquote	markdown.html#Blockquote	type Blockquote		168
nim	UlParser	markdown.html#UlParser	type UlParser		171
nim	Ul	markdown.html#Ul	type Ul		172
nim	OlParser	markdown.html#OlParser	type OlParser		174
nim	Ol	markdown.html#Ol	type Ol		175
nim	Li	markdown.html#Li	type Li		178
nim	HtmlTableParser	markdown.html#HtmlTableParser	type HtmlTableParser		183
nim	HtmlTable	markdown.html#HtmlTable	type HtmlTable		184
nim	THead	markdown.html#THead	type THead		185
nim	TBody	markdown.html#TBody	type TBody		186
nim	TableRow	markdown.html#TableRow	type TableRow		189
nim	THeadCell	markdown.html#THeadCell	type THeadCell		191
nim	TBodyCell	markdown.html#TBodyCell	type TBodyCell		194
nim	Inline	markdown.html#Inline	type Inline		197
nim	TextParser	markdown.html#TextParser	type TextParser		199
nim	Text	markdown.html#Text	type Text		200
nim	CodeSpanParser	markdown.html#CodeSpanParser	type CodeSpanParser		203
nim	CodeSpan	markdown.html#CodeSpan	type CodeSpan		204
nim	SoftBreakParser	markdown.html#SoftBreakParser	type SoftBreakParser		206
nim	SoftBreak	markdown.html#SoftBreak	type SoftBreak		207
nim	HardBreakParser	markdown.html#HardBreakParser	type HardBreakParser		209
nim	HardBreak	markdown.html#HardBreak	type HardBreak		210
nim	StrikethroughParser	markdown.html#StrikethroughParser	type StrikethroughParser		212
nim	Strikethrough	markdown.html#Strikethrough	type Strikethrough		213
nim	EscapeParser	markdown.html#EscapeParser	type EscapeParser		215
nim	Escape	markdown.html#Escape	type Escape		216
nim	InlineHtmlParser	markdown.html#InlineHtmlParser	type InlineHtmlParser		218
nim	InlineHtml	markdown.html#InlineHtml	type InlineHtml		219
nim	HtmlEntityParser	markdown.html#HtmlEntityParser	type HtmlEntityParser		221
nim	HtmlEntity	markdown.html#HtmlEntity	type HtmlEntity		222
nim	LinkParser	markdown.html#LinkParser	type LinkParser		224
nim	Link	markdown.html#Link	type Link		225
nim	AutoLinkParser	markdown.html#AutoLinkParser	type AutoLinkParser		231
nim	AutoLink	markdown.html#AutoLink	type AutoLink		232
nim	ImageParser	markdown.html#ImageParser	type ImageParser		236
nim	Image	markdown.html#Image	type Image		237
nim	DelimiterParser	markdown.html#DelimiterParser	type DelimiterParser		244
nim	Delimiter	markdown.html#Delimiter	type Delimiter		245
nim	Em	markdown.html#Em	type Em		254
nim	Strong	markdown.html#Strong	type Strong		256
nim	State	markdown.html#State	type State		258
nim	parse	markdown.html#parse,State,Token	proc parse(state: State; token: Token)		262
nim	render	markdown.html#render,Token,string	proc render(token: Token; sep = "\n"): string		263
nim	getLinkText	markdown.html#getLinkText,string,int,bool	proc getLinkText(doc: string; start: int; allowNested: bool = false): tuple[\n    slice: Slice[int], size: int]		266
nim	getLinkLabel	markdown.html#getLinkLabel,string,int	proc getLinkLabel(doc: string; start: int): tuple[label: string, size: int]		267
nim	getLinkDestination	markdown.html#getLinkDestination,string,int	proc getLinkDestination(doc: string; start: int): tuple[slice: Slice[int], size: int]		268
nim	getLinkTitle	markdown.html#getLinkTitle,string,int	proc getLinkTitle(doc: string; start: int): tuple[slice: Slice[int], size: int]		269
nim	isContinuationText	markdown.html#isContinuationText,string,int,int	proc isContinuationText(doc: string; start: int = 0; stop: int = 0): bool		270
nim	parse	markdown.html#parse.e,Parser,string,int	method parse(this: Parser; doc: string; start: int): ParseResult		274
nim	appendChild	markdown.html#appendChild,Token,Token	proc appendChild(token: Token; child: Token)		277
nim	`$`	markdown.html#$,Chunk	proc `$`(chunk: Chunk): string		338
nim	replaceInitialTabs	markdown.html#replaceInitialTabs,string	proc replaceInitialTabs(doc: string): string		341
nim	`$`	markdown.html#$.e,Token	method `$`(token: Token): string		472
nim	`$`	markdown.html#$.e,CodeSpan	method `$`(token: CodeSpan): string		474
nim	`$`	markdown.html#$.e,SoftBreak	method `$`(token: SoftBreak): string		477
nim	`$`	markdown.html#$.e,HardBreak	method `$`(token: HardBreak): string		479
nim	`$`	markdown.html#$.e,Strikethrough	method `$`(token: Strikethrough): string		481
nim	`$`	markdown.html#$.e,ThematicBreak	method `$`(token: ThematicBreak): string		484
nim	`$`	markdown.html#$.e,Escape	method `$`(token: Escape): string		487
nim	`$`	markdown.html#$.e,InlineHtml	method `$`(token: InlineHtml): string		490
nim	`$`	markdown.html#$.e,HtmlEntity	method `$`(token: HtmlEntity): string		493
nim	`$`	markdown.html#$.e,Text	method `$`(token: Text): string		496
nim	`$`	markdown.html#$.e,AutoLink	method `$`(token: AutoLink): string		499
nim	`$`	markdown.html#$.e,CodeBlock	method `$`(token: CodeBlock): string		504
nim	`$`	markdown.html#$.e,HtmlBlock	method `$`(token: HtmlBlock): string		515
nim	`$`	markdown.html#$.e,Link	method `$`(token: Link): string		518
nim	toAlt	markdown.html#toAlt,Token	proc toAlt(token: Token): string		524
nim	`$`	markdown.html#$.e,Image	method `$`(token: Image): string		534
nim	`$`	markdown.html#$.e,Em	method `$`(token: Em): string		541
nim	`$`	markdown.html#$.e,Strong	method `$`(token: Strong): string		543
nim	`$`	markdown.html#$.e,Paragraph	method `$`(token: Paragraph): string		545
nim	`$`	markdown.html#$.e,Heading	method `$`(token: Heading): string		550
nim	`$`	markdown.html#$.e,THeadCell	method `$`(token: THeadCell): string		555
nim	`$`	markdown.html#$.e,TBodyCell	method `$`(token: TBodyCell): string		561
nim	`$`	markdown.html#$.e,TableRow	method `$`(token: TableRow): string		567
nim	`$`	markdown.html#$.e,TBody	method `$`(token: TBody): string		571
nim	`$`	markdown.html#$.e,THead	method `$`(token: THead): string		575
nim	`$`	markdown.html#$.e,HtmlTable	method `$`(token: HtmlTable): string		579
nim	`$`	markdown.html#$.e,Li	method `$`(token: Li): string		605
nim	`$`	markdown.html#$.e,Ol	method `$`(token: Ol): string		608
nim	`$`	markdown.html#$.e,Ul	method `$`(token: Ul): string		614
nim	`$`	markdown.html#$.e,Blockquote	method `$`(token: Blockquote): string		617
nim	parseOrderedListItem	markdown.html#parseOrderedListItem,string,int,string,string,int	proc parseOrderedListItem(doc: string; start = 0; marker: var string;\n                     listItemDoc: var string; index: var int = 1): int		644
nim	parseUnorderedListItem	markdown.html#parseUnorderedListItem,string,int,string,string	proc parseUnorderedListItem(doc: string; start = 0; marker: var string;\n                       listItemDoc: var string): int		698
nim	parse	markdown.html#parse.e,UlParser,string,int	method parse(this: UlParser; doc: string; start: int): ParseResult		760
nim	parse	markdown.html#parse.e,OlParser,string,int	method parse(this: OlParser; doc: string; start: int): ParseResult		790
nim	parse	markdown.html#parse.e,ThematicBreakParser,string,int	method parse(this: ThematicBreakParser; doc: string; start: int): ParseResult		830
nim	getFence	markdown.html#getFence,string,int	proc getFence(doc: string; start: int = 0): tuple[indent: int, fence: string,\n    size: int]		838
nim	parseCodeContent	markdown.html#parseCodeContent,string,int,string	proc parseCodeContent(doc: string; indent: int; fence: string): tuple[code: string,\n    size: int]		848
nim	parseCodeInfo	markdown.html#parseCodeInfo,string,int	proc parseCodeInfo(doc: string; start: int = 0): tuple[info: string, size: int]		866
nim	parseTildeBlockCodeInfo	markdown.html#parseTildeBlockCodeInfo,string,int	proc parseTildeBlockCodeInfo(doc: string; start: int = 0): tuple[info: string,\n    size: int]		875
nim	parse	markdown.html#parse.e,FencedCodeParser,string,int	method parse(this: FencedCodeParser; doc: string; start: int): ParseResult		884
nim	getIndentedCodeFirstLine	markdown.html#getIndentedCodeFirstLine,string,int	proc getIndentedCodeFirstLine(doc: string; start: int = 0): tuple[code: string,\n    size: int]		917
nim	getIndentedCodeRestLines	markdown.html#getIndentedCodeRestLines,string,int	proc getIndentedCodeRestLines(doc: string; start: int = 0): tuple[code: string,\n    size: int]		923
nim	parse	markdown.html#parse.e,IndentedCodeParser,string,int	method parse(this: IndentedCodeParser; doc: string; start: int): ParseResult		944
nim	parseIndentedCode	markdown.html#parseIndentedCode,string,int	proc parseIndentedCode(doc: string; start: int): ParseResult		958
nim	getSetextHeading	markdown.html#getSetextHeading,string,int	proc getSetextHeading(doc: string; start = 0): tuple[level: int, doc: string,\n    size: int]		961
nim	getAtxHeading	markdown.html#getAtxHeading,string,int	proc getAtxHeading(s: string; start: int = 0): tuple[level: int, doc: string,\n    size: int]		1009
nim	parse	markdown.html#parse.e,BlanklineParser,string,int	method parse(this: BlanklineParser; doc: string; start: int): ParseResult		1030
nim	parseBlankLine	markdown.html#parseBlankLine,string,int	proc parseBlankLine(doc: string; start: int): ParseResult		1036
nim	parseTableRow	markdown.html#parseTableRow,string	proc parseTableRow(doc: string): seq[string]		1039
nim	parseTableAligns	markdown.html#parseTableAligns,string	proc parseTableAligns(doc: string): tuple[aligns: seq[string], matched: bool]		1081
nim	parse	markdown.html#parse.e,HtmlTableParser,string,int	method parse(this: HtmlTableParser; doc: string; start: int): ParseResult		1106
nim	parseHTMLBlockContent	markdown.html#parseHTMLBlockContent,string,string,string	proc parseHTMLBlockContent(doc: string; startPattern: string; endPattern: string;\n                      ignoreCase = false): tuple[html: string, size: int]		1193
nim	matchHtmlStart	markdown.html#matchHtmlStart,string,int,int	proc matchHtmlStart(doc: string; start: int = 0; bufsize: int = 0): tuple[\n    startRe: Regex, endRe: Regex, endMatch: bool, continuation: bool]		1228
nim	parse	markdown.html#parse.e,HtmlBlockParser,string,int	method parse(this: HtmlBlockParser; doc: string; start: int): ParseResult		1293
nim	isBlockquote	markdown.html#isBlockquote,string,int	proc isBlockquote(s: string; start: int = 0): bool		1298
nim	parse	markdown.html#parse.e,BlockquoteParser,string,int	method parse(this: BlockquoteParser; doc: string; start: int): ParseResult		1316
nim	parse	markdown.html#parse.e,ReferenceParser,string,int	method parse(this: ReferenceParser; doc: string; start: int): ParseResult		1367
nim	isUlEmptyListItem	markdown.html#isUlEmptyListItem,string,int,int	proc isUlEmptyListItem(doc: string; start: int = 0; stop: int = 0): bool		1487
nim	isOlNo1ListItem	markdown.html#isOlNo1ListItem,string,int,int	proc isOlNo1ListItem(doc: string; start: int = 0; stop: int = 0): bool		1490
nim	parse	markdown.html#parse.e,ParagraphParser,string,int	method parse(this: ParagraphParser; doc: string; start: int): ParseResult		1496
nim	tipToken	markdown.html#tipToken,Token	proc tipToken(token: Token): Token		1534
nim	finalizeList	markdown.html#finalizeList,State,Token	proc finalizeList(state: State; token: Token)		1569
nim	apply	markdown.html#apply.e,Token,State,ParseResult	method apply(this: Token; state: State; res: ParseResult): ParseResult		1580
nim	apply	markdown.html#apply.e,Ul,State,ParseResult	method apply(this: Ul; state: State; res: ParseResult): ParseResult		1583
nim	apply	markdown.html#apply.e,Ol,State,ParseResult	method apply(this: Ol; state: State; res: ParseResult): ParseResult		1587
nim	apply	markdown.html#apply.e,Blockquote,State,ParseResult	method apply(this: Blockquote; state: State; res: ParseResult): ParseResult		1591
nim	apply	markdown.html#apply.e,Reference,State,ParseResult	method apply(this: Reference; state: State; res: ParseResult): ParseResult		1594
nim	parse	markdown.html#parse.e,TextParser,string,int	method parse(this: TextParser; doc: string; start: int): ParseResult		1614
nim	parse	markdown.html#parse.e,SoftBreakParser,string,int	method parse(this: SoftBreakParser; doc: string; start: int): ParseResult		1620
nim	parse	markdown.html#parse.e,AutoLinkParser,string,int	method parse(this: AutoLinkParser; doc: string; start: int): ParseResult		1626
nim	scanInlineDelimiters	markdown.html#scanInlineDelimiters,string,int,Delimiter	proc scanInlineDelimiters(doc: string; start: int; delimiter: var Delimiter)		1657
nim	parse	markdown.html#parse.e,DelimiterParser,string,int	method parse(this: DelimiterParser; doc: string; start: int): ParseResult		1705
nim	normalizeLabel	markdown.html#normalizeLabel,string	proc normalizeLabel(label: string): string		1801
nim	apply	markdown.html#apply.e,Link,State,ParseResult	method apply(this: Link; state: State; res: ParseResult): ParseResult		1896
nim	parse	markdown.html#parse.e,LinkParser,string,int	method parse(this: LinkParser; doc: string; start: int): ParseResult		2000
nim	apply	markdown.html#apply.e,Image,State,ParseResult	method apply(this: Image; state: State; res: ParseResult): ParseResult		2118
nim	parse	markdown.html#parse.e,ImageParser,string,int	method parse(this: ImageParser; doc: string; start: int): ParseResult		2131
nim	parse	markdown.html#parse.e,HtmlEntityParser,string,int	method parse(this: HtmlEntityParser; doc: string; start: int): ParseResult		2159
nim	parse	markdown.html#parse.e,EscapeParser,string,int	method parse(this: EscapeParser; doc: string; start: int): ParseResult		2179
nim	parse	markdown.html#parse.e,InlineHtmlParser,string,int	method parse(this: InlineHtmlParser; doc: string; start: int): ParseResult		2189
nim	parse	markdown.html#parse.e,HardBreakParser,string,int	method parse(this: HardBreakParser; doc: string; start: int): ParseResult		2201
nim	parse	markdown.html#parse.e,CodeSpanParser,string,int	method parse(this: CodeSpanParser; doc: string; start: int): ParseResult		2207
nim	parse	markdown.html#parse.e,StrikethroughParser,string,int	method parse(this: StrikethroughParser; doc: string; start: int): ParseResult		2228
nim	removeDelimiter	markdown.html#removeDelimiter,DoublyLinkedNode[Delimiter]	proc removeDelimiter(delimiter: var DoublyLinkedNode[Delimiter])		2239
nim	getDelimiterStack	markdown.html#getDelimiterStack,Token	proc getDelimiterStack(token: Token): DoublyLinkedList[Delimiter]		2246
nim	processEmphasis	markdown.html#processEmphasis,State,Token	proc processEmphasis(state: State; token: Token)		2255
nim	initCommonmarkConfig	markdown.html#initCommonmarkConfig	proc initCommonmarkConfig(escape = true; keepHtml = true; blockParsers = @[\n    ReferenceParser(), ThematicBreakParser(), BlockquoteParser(), UlParser(),\n    OlParser(), IndentedCodeParser(), FencedCodeParser(), HtmlBlockParser(),\n    AtxHeadingParser(), SetextHeadingParser(), BlanklineParser(),\n    ParagraphParser()]; inlineParsers = @[DelimiterParser(), ImageParser(),\n    AutoLinkParser(), LinkParser(), HtmlEntityParser(), InlineHtmlParser(),\n    EscapeParser(), CodeSpanParser(), HardBreakParser(), SoftBreakParser(),\n    TextParser()]): MarkdownConfig		2421
nim	initGfmConfig	markdown.html#initGfmConfig	proc initGfmConfig(escape = true; keepHtml = true; blockParsers = @[\n    ReferenceParser(), ThematicBreakParser(), BlockquoteParser(), UlParser(),\n    OlParser(), IndentedCodeParser(), FencedCodeParser(), HtmlBlockParser(),\n    HtmlTableParser(), AtxHeadingParser(), SetextHeadingParser(),\n    BlanklineParser(), ParagraphParser()]; inlineParsers = @[DelimiterParser(),\n    ImageParser(), AutoLinkParser(), LinkParser(), HtmlEntityParser(),\n    InlineHtmlParser(), EscapeParser(), StrikethroughParser(), CodeSpanParser(),\n    HardBreakParser(), SoftBreakParser(), TextParser()]): MarkdownConfig		2459
nim	markdown	markdown.html#markdown,string,MarkdownConfig,Token	proc markdown(doc: string; config: MarkdownConfig = nil; root: Token = Document()): string		2499
nim	readCLIOptions	markdown.html#readCLIOptions	proc readCLIOptions(): MarkdownConfig		2520
nimgrp	$	markdown.html#$-methods-all	method		472
nimgrp	apply	markdown.html#apply-methods-all	method		1580
nimgrp	parse	markdown.html#parse-methods-all	method		274
heading	nim-markdown	markdown.html#nimminusmarkdown	 nim-markdown		0
